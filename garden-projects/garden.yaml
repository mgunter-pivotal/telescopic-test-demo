---
kind: Project
name: suitcaselab
variables:
  record: false
  play: false
environments:
  - name: local
    variables:
      play: true
  - name: local-record
    variables:
      record: true
  - name: gke
providers:
  - name: local-kubernetes
    environments: [local, local-record]
    context: docker-desktop
  - name: kubernetes
    context: gke_th-structure-flow-demo_us-east1-b_stream-demo
    environments: [gke]
    deploymentRegistry:
      # The hostname of the registry, e.g. gcr.io for GCR (Google Container Registry)
      hostname: gcr.io
      # Namespace (aka project ID) to use in the registry for this project.
      # For GKE/GCR, use the project ID where your cluster is.
      namespace: th-structure-flow-demo
    imagePullSecrets:
      # The name of the secret you stored using `kubectl create secret docker-registry`
    - name: gcr-json-key
      # Change this if you store the secret in another namespace.
      namespace: default
---
# kind: Module
# type: kubernetes
# name: player
# disabled: ${var.play}
# description: Telemetry player, utilizes recording files stored in a volume mount shared w/recorder-pod
# files: [player-deploy.yaml]
# dependencies: [local-pv, broker, player-svc]
# serviceResource:
#   # The type of Kubernetes resource to sync files to.
#   kind: Deployment

#   # The name of the resource to sync to. If the module contains a single resource of the specified Kind, this can be
#   # omitted.
#   name: player-pod
# tasks:
#   - name: play
#     args: ["test2.sqlite3"]
---
kind: Module
type: kubernetes
name: player-svc
disabled: ${var.record}
description: Telemetry player, utilizes recording files stored in a volume mount shared w/recorder-pod
files: [player-svc.yaml]
dependencies: [local-pv, broker]
---
kind: Module
type: kubernetes
name: recorder
disabled: true
description: Telemetry recorder, makes recordings of UDP packets coming from node port 30000 (or another pod?)
files: [recorder-pod.yaml,recorder-svc.yaml]
dependencies: [local-pv, broker]
---
kind: Module
type: kubernetes
name: local-pv
disabled: false
description: Telemetry recorder, makes recordings of UDP packets coming from node port 30000 (or another pod?)
files: [recorder-pv.yaml,recorder-pvc.yaml]
---
kind: Module
type: kubernetes
name: zookeeper
description: this is zookeeper for kafka
files: [zookeeper.yaml,zooservice.yaml]
dependencies: [local-pv]
---
kind: Module
type: kubernetes
name: broker
description: this is the kafka broker itself....
files: [kafka-docker.yaml,kafka-service.yaml,udp-inbound-p3000-svc.yaml]
dependencies: [zookeeper]
---
kind: Module
description: UDP Telemetry capture app
type: container
name: udp-app
disabled: false
services:
  - name: udp-app
    ports:
      - name: udp
        protocol: UDP
        containerPort: 20777
        servicePort: 20777
    env:
      KAFKA_BOOTSTRAP_SERVERS_ENV: kafka-service:31234
      UDP_PORT: 20777
    dependencies: [broker]      
---
kind: Module
type: helm
name: flink-operator
chart: flink-operator
chartPath: helm-chart/flink-operator
values: {operatorImage.name=gcr.io/flink-operator/flink-operator:latest}
disabled: false
description: Operator for Flink Session Cluster via CRD
dependencies: [broker]
---
kind: Module
type: kubernetes
name: flink-session-cluster
disabled: false
description: a session cluster that can run flink jobs
dependencies: [flink-operator]
files: [flinkoperator_v1beta1_flinksessioncluster.yaml]

#kubectl port-forward service/flinksessioncluster-sample-jobmanager 8081:8081 -n flink-cluster-default
